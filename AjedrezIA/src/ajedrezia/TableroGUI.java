/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajedrezia;

import ajedrez.juego.Ajedrez;
import ajedrez.juego.Escaque;
import ajedrez.juego.Tablero;
import ajedrez.piezas.Alfil;
import ajedrez.piezas.Caballo;
import ajedrez.piezas.NoPieza;
import ajedrez.piezas.Peon;
import ajedrez.piezas.Pieza;
import ajedrez.piezas.Posicion;
import ajedrez.piezas.Reina;
import ajedrez.piezas.Rey;
import ajedrez.piezas.Torre;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.Border;

/**
 *
 * @author Joaquin
 */
public class TableroGUI extends javax.swing.JFrame {

    
    private JLabel escaques[][] = new JLabel[8][8];
    private final byte TAMANIO = 8;
    public Icon ImageIcon;
    private boolean isSelected = false;
    private boolean isActive = true;
    //private Escaque[][] casillas;
    
    private String nombrePieza="NoPieza";
    private boolean equipo;
    private Tablero tablero;
    
    
    
    

    /**
     * Creates new form Tablero
     */
    public TableroGUI() {  
        initComponents();
    }
    
    public void agregarComponentes(){
        generarTablero();
        tablero = new Tablero();
        //cargarImagenes();
        //pintarTablero();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TableroJuego = new javax.swing.JPanel();
        fichas1 = new javax.swing.JPanel();
        alfilBlanco = new javax.swing.JLabel();
        caballoBlanco = new javax.swing.JLabel();
        peonBlanco = new javax.swing.JLabel();
        reinaBlanco = new javax.swing.JLabel();
        reyBlanco = new javax.swing.JLabel();
        torreBlanco = new javax.swing.JLabel();
        fichas2 = new javax.swing.JPanel();
        alfilOscuro = new javax.swing.JLabel();
        caballoOscuro = new javax.swing.JLabel();
        peonOscuro = new javax.swing.JLabel();
        reinaOscuro = new javax.swing.JLabel();
        reyOscuro = new javax.swing.JLabel();
        torreOscuro = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelPieza = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelEscaque = new javax.swing.JLabel();
        btnJugar = new javax.swing.JButton();
        btnJuegoNuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TableroJuego.setBackground(new java.awt.Color(0, 153, 153));
        TableroJuego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        TableroJuego.setAlignmentX(0.0F);
        TableroJuego.setAlignmentY(0.0F);
        TableroJuego.setAutoscrolls(true);
        TableroJuego.setPreferredSize(new java.awt.Dimension(800, 800));

        javax.swing.GroupLayout TableroJuegoLayout = new javax.swing.GroupLayout(TableroJuego);
        TableroJuego.setLayout(TableroJuegoLayout);
        TableroJuegoLayout.setHorizontalGroup(
            TableroJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        TableroJuegoLayout.setVerticalGroup(
            TableroJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        fichas1.setBackground(new java.awt.Color(153, 153, 153));
        fichas1.setPreferredSize(new java.awt.Dimension(345, 150));

        alfilBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfil.png"))); // NOI18N
        alfilBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        alfilBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        alfilBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alfilBlancoMouseClicked(evt);
            }
        });

        caballoBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caballo.png"))); // NOI18N
        caballoBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        caballoBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        caballoBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caballoBlancoMouseClicked(evt);
            }
        });

        peonBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/peon.png"))); // NOI18N
        peonBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        peonBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        peonBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peonBlancoMouseClicked(evt);
            }
        });

        reinaBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reina.png"))); // NOI18N
        reinaBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reinaBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        reinaBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reinaBlancoMouseClicked(evt);
            }
        });

        reyBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rey.png"))); // NOI18N
        reyBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reyBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reyBlancoMouseClicked(evt);
            }
        });

        torreBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/torre.png"))); // NOI18N
        torreBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        torreBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        torreBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                torreBlancoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fichas1Layout = new javax.swing.GroupLayout(fichas1);
        fichas1.setLayout(fichas1Layout);
        fichas1Layout.setHorizontalGroup(
            fichas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fichas1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(alfilBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caballoBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reinaBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reyBlanco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(torreBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fichas1Layout.setVerticalGroup(
            fichas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fichas1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(fichas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(alfilBlanco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(peonBlanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reinaBlanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caballoBlanco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reyBlanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(torreBlanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        fichas2.setBackground(new java.awt.Color(153, 153, 153));
        fichas2.setPreferredSize(new java.awt.Dimension(345, 150));

        alfilOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfilotro.png"))); // NOI18N
        alfilOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        alfilOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        alfilOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alfilOscuroMouseClicked(evt);
            }
        });

        caballoOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caballootro.png"))); // NOI18N
        caballoOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        caballoOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        caballoOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caballoOscuroMouseClicked(evt);
            }
        });

        peonOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/peonotro.png"))); // NOI18N
        peonOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        peonOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        peonOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peonOscuroMouseClicked(evt);
            }
        });

        reinaOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reinaotra.png"))); // NOI18N
        reinaOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reinaOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        reinaOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reinaOscuroMouseClicked(evt);
            }
        });

        reyOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reyotro.png"))); // NOI18N
        reyOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reyOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        reyOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reyOscuroMouseClicked(evt);
            }
        });

        torreOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/torreotra.png"))); // NOI18N
        torreOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        torreOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        torreOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                torreOscuroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fichas2Layout = new javax.swing.GroupLayout(fichas2);
        fichas2.setLayout(fichas2Layout);
        fichas2Layout.setHorizontalGroup(
            fichas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fichas2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(alfilOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caballoOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peonOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reinaOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reyOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(torreOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        fichas2Layout.setVerticalGroup(
            fichas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fichas2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(fichas2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(alfilOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(peonOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caballoOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reinaOscuro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reyOscuro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(torreOscuro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Pieza seleccionada: ");

        labelPieza.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Escaque:");

        labelEscaque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelEscaque.setText("jLabel3");

        btnJugar.setText("JUGAR");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });

        btnJuegoNuevo.setText("NUEVO JUEGO");
        btnJuegoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJuegoNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TableroJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fichas1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                        .addComponent(fichas2, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPieza))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelEscaque))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnJugar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnJuegoNuevo)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TableroJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnJugar)
                            .addComponent(btnJuegoNuevo))
                        .addGap(27, 27, 27)
                        .addComponent(fichas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fichas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(labelPieza))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(labelEscaque))))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alfilBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alfilBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(alfilBlanco); 
        labelPieza.setText("Alfil Blanco");
        nombrePieza = "Alfil";
        equipo=false;
    }//GEN-LAST:event_alfilBlancoMouseClicked

    private void caballoBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caballoBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(caballoBlanco); 
        labelPieza.setText("Caballo Blanco");
        nombrePieza = "Caballo";
        equipo=false;
    }//GEN-LAST:event_caballoBlancoMouseClicked

    private void peonBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peonBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(peonBlanco); 
        labelPieza.setText("Peon Blanco");
        nombrePieza = "Peon";
        equipo=false;
    }//GEN-LAST:event_peonBlancoMouseClicked

    private void reinaBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reinaBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reinaBlanco);
        labelPieza.setText("Reina Blanco");
        nombrePieza = "Reina";
        equipo=false;
    }//GEN-LAST:event_reinaBlancoMouseClicked

    private void reyBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reyBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reyBlanco); 
        labelPieza.setText("Rey Blanco");
        nombrePieza = "Rey";
        equipo=false;
    }//GEN-LAST:event_reyBlancoMouseClicked

    private void torreBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_torreBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(torreBlanco); 
        labelPieza.setText("Torre Blanco");
        nombrePieza = "Torre";
        equipo=false;
    }//GEN-LAST:event_torreBlancoMouseClicked

    private void alfilOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alfilOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(alfilOscuro); 
        labelPieza.setText("Alfil Oscuro");
        nombrePieza = "Alfil";
        equipo=true;
    }//GEN-LAST:event_alfilOscuroMouseClicked

    private void caballoOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caballoOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(caballoOscuro); 
        labelPieza.setText("Caballo Oscuro");
        nombrePieza = "Caballo";
        equipo=true;
    }//GEN-LAST:event_caballoOscuroMouseClicked

    private void peonOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peonOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(peonOscuro); 
        labelPieza.setText("Peon Oscuro");
        nombrePieza = "Peon";
        equipo=true;
    }//GEN-LAST:event_peonOscuroMouseClicked

    private void reinaOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reinaOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reinaOscuro); 
        labelPieza.setText("Reina Oscuro");
        nombrePieza = "Reina";
        equipo=true;
    }//GEN-LAST:event_reinaOscuroMouseClicked

    private void reyOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reyOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reyOscuro); 
        labelPieza.setText("Rey Oscuro");
        nombrePieza = "Rey";
        equipo=true;
    }//GEN-LAST:event_reyOscuroMouseClicked

    private void torreOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_torreOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(torreOscuro); 
        labelPieza.setText("Torre Oscuro");
        nombrePieza = "Torre";
        equipo=true;
    }//GEN-LAST:event_torreOscuroMouseClicked

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        // TODO add your handling code here:
        desactivarFichas();
    }//GEN-LAST:event_btnJugarActionPerformed

    private void btnJuegoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJuegoNuevoActionPerformed
        // TODO add your handling code here:
        activarFichas();
    }//GEN-LAST:event_btnJuegoNuevoActionPerformed

   
    public void activarDesactivarPiezas(JLabel pieza){
        if(isActive){
            Border borderDesactivo = BorderFactory.createLineBorder(Color.BLACK, 1);
            alfilBlanco.setBorder(borderDesactivo);
            caballoBlanco.setBorder(borderDesactivo);
            peonBlanco.setBorder(borderDesactivo);
            reinaBlanco.setBorder(borderDesactivo);
            reyBlanco.setBorder(borderDesactivo);
            torreBlanco.setBorder(borderDesactivo);
            //
            alfilOscuro.setBorder(borderDesactivo);
            caballoOscuro.setBorder(borderDesactivo);
            peonOscuro.setBorder(borderDesactivo);
            reinaOscuro.setBorder(borderDesactivo);
            reyOscuro.setBorder(borderDesactivo);
            torreOscuro.setBorder(borderDesactivo);
            //
            Border borderActivo = BorderFactory.createLineBorder(Color.YELLOW, 3);
            pieza.setBorder(borderActivo);
            ImageIcon = pieza.getIcon();
            isSelected = true;       
        }
    }
    
    public void activarDesactivarEscaques(JLabel escaque){
        Border borderDesactivo = BorderFactory.createLineBorder(Color.BLACK, 1);
        for (int i = 0; i < escaques.length; i++) {
            for (int j = 0; j < escaques.length; j++) {
                escaques[i][j].setBorder(borderDesactivo);
            }
        }
        Border borderActivo = BorderFactory.createLineBorder(Color.YELLOW, 3);
        escaque.setBorder(borderActivo);  
    }
    
    public void desactivarFichas(){
        isActive = false;
        alfilBlanco.setEnabled(false);
        caballoBlanco.setEnabled(false);
        peonBlanco.setEnabled(false);
        reinaBlanco.setEnabled(false);
        reyBlanco.setEnabled(false);
        torreBlanco.setEnabled(false);
        //
        alfilOscuro.setEnabled(false);
        caballoOscuro.setEnabled(false);
        peonOscuro.setEnabled(false);
        reinaOscuro.setEnabled(false);
        reyOscuro.setEnabled(false);
        torreOscuro.setEnabled(false);
        
    }
    
    public void activarFichas(){
        isActive = true;
        alfilBlanco.setEnabled(true);
        caballoBlanco.setEnabled(true);
        peonBlanco.setEnabled(true);
        reinaBlanco.setEnabled(true);
        reyBlanco.setEnabled(true);
        torreBlanco.setEnabled(true);
        //
        alfilOscuro.setEnabled(true);
        caballoOscuro.setEnabled(true);
        peonOscuro.setEnabled(true);
        reinaOscuro.setEnabled(true);
        reyOscuro.setEnabled(true);
        torreOscuro.setEnabled(true);   
    }
    
    
    
    
    public void generarTablero(){
        GridLayout tb = new GridLayout(8,8);
        boolean colorNegro = false;
        //escaques = new JLabel[TAMANIO][TAMANIO];
        for (int i = 0; i < escaques.length; i++) {
            for (int j = 0; j < escaques.length; j++) {
                escaques[i][j] = new JLabel();
                escaques[i][j].setOpaque(true);
                if(colorNegro){
                    escaques[i][j].setBackground(Color.black);
                }
                else{
                    escaques[i][j].setBackground(Color.white);
                } 
                colorNegro = !colorNegro;
                String X = Integer.toString(i);
                String Y = Integer.toString(j);
                String posicion = "X: "+i+" "+"Y: "+j; 
                TableroJuego.add(escaques[i][j]);
                escaques[i][j].addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        //System.out.println("Posicion: "+posicion+i);
                        agregarPieza(X,Y);
                    }
                });
            }
            colorNegro = !colorNegro;
            TableroJuego.setLayout(tb);
            super.revalidate();
            super.repaint();
            
        }
        
    }
    
    public final void agregarPieza(String x,String y){
        System.err.println(x + " " + y+" "+isSelected+" "+isActive + " "+ImageIcon);
        labelEscaque.setText(x+"--"+y);
        int i = Integer.parseInt(x);
        int j= Integer.parseInt(y);
        
        if(isSelected && isActive){
            escaques[i][j].setIcon(ImageIcon);
            tablero.getCasillas()[i][j].setPieza(crearPieza(i,j));
        }
        else{
            activarDesactivarEscaques(escaques[i][j]);
        }
    }
    
    
    public final void addPieceFile(char color, char piece, int y, int x){
        alfilBlanco.setEnabled(true);
        caballoBlanco.setEnabled(true);
        peonBlanco.setEnabled(true);
        reinaBlanco.setEnabled(true);
        reyBlanco.setEnabled(true);
        torreBlanco.setEnabled(true);
        //
        alfilOscuro.setEnabled(true);
        caballoOscuro.setEnabled(true);
        peonOscuro.setEnabled(true);
        reinaOscuro.setEnabled(true);
        reyOscuro.setEnabled(true);
        torreOscuro.setEnabled(true);  
        switch(piece)
        {
           case 'R' :
              nombrePieza = "Rey";
              if(color == 'B'){
                  ImageIcon = reyBlanco.getIcon(); 
              } else{
                  ImageIcon = reyOscuro.getIcon(); 
              }
              break;
           case 'D' :
              nombrePieza = "Reina";
              if(color == 'B'){
                  ImageIcon = reinaBlanco.getIcon(); 
              } else{
                  ImageIcon = reinaOscuro.getIcon(); 
              }
              break;
           case 'T' :
              nombrePieza = "Torre";
              if(color == 'B'){
                  ImageIcon = torreBlanco.getIcon(); 
              } else{
                  ImageIcon = torreOscuro.getIcon(); 
              }
              break;
           case 'A' :
              nombrePieza = "Alfil";
              if(color == 'B'){
                  ImageIcon = alfilBlanco.getIcon(); 
              } else{
                  ImageIcon = alfilOscuro.getIcon(); 
              }
              break;
           case 'C' :
              nombrePieza = "Caballo";
              if(color == 'B'){
                  ImageIcon = caballoBlanco.getIcon(); 
              } else{
                  ImageIcon = caballoOscuro.getIcon(); 
              }
              break;
           case 'P' :
              nombrePieza = "Peon";
              if(color == 'B'){
                  ImageIcon = peonBlanco.getIcon(); 
              } else{
                  ImageIcon = peonOscuro.getIcon(); 
              }
              break;
           default : 
              // Declaraciones
        }
        //falta decir de que equipo es (lo del color)
        escaques[x][y].setIcon(ImageIcon);
        tablero.getCasillas()[x][y].setPieza(crearPieza(x,y));
    }
    
    public Pieza crearPieza(int x,int y){
        Posicion pos = new Posicion();
        pos.setPosicion(x, y);
        Pieza pieza = null;
        if( "Alfil".equals(nombrePieza)){
            Alfil alfil = new Alfil();
            pieza  = alfil;
        }
        if( "Caballo".equals(nombrePieza)){
            Caballo caballo = new Caballo();
            pieza  = caballo;
        }
        if( "Peon".equals(nombrePieza)){
            Peon peon = new Peon();
            pieza  = peon;
        }
        if( "Reina".equals(nombrePieza)){
            Reina reina = new Reina();
            pieza  = reina;
        }
        if( "Rey".equals(nombrePieza)){
            Rey rey = new Rey();
            pieza  = rey;
        }
        if( "Torre".equals(nombrePieza)){
            Torre torre = new Torre();
            pieza  = torre;
        }
        else{
            NoPieza nopieza= new NoPieza();
            pieza  = nopieza;
            
        }
        
        pieza.setEquipo(equipo);
        pieza.setPosicion(pos);
        
        return pieza;
    }
    
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableroGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TableroJuego;
    private javax.swing.JLabel alfilBlanco;
    private javax.swing.JLabel alfilOscuro;
    private javax.swing.JButton btnJuegoNuevo;
    private javax.swing.JButton btnJugar;
    private javax.swing.JLabel caballoBlanco;
    private javax.swing.JLabel caballoOscuro;
    private javax.swing.JPanel fichas1;
    private javax.swing.JPanel fichas2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelEscaque;
    private javax.swing.JLabel labelPieza;
    private javax.swing.JLabel peonBlanco;
    private javax.swing.JLabel peonOscuro;
    private javax.swing.JLabel reinaBlanco;
    private javax.swing.JLabel reinaOscuro;
    private javax.swing.JLabel reyBlanco;
    private javax.swing.JLabel reyOscuro;
    private javax.swing.JLabel torreBlanco;
    private javax.swing.JLabel torreOscuro;
    // End of variables declaration//GEN-END:variables
}
