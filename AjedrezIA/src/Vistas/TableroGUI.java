/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.ControladorArbol;
import Modelos.Actividad;
import Modelos.Tablero;
import Modelos.ModeloRegistrarActividad;
import Controladores.ControladorTablero;
import Modelos.Arbol;
//import Modelos.Jugada;
import Modelos.Nodo;
import Modelos.Pieza;
import Modelos.Posicion;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
//import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.border.Border;

/**
 *
 * @author Joaquin
 */
public class TableroGUI extends javax.swing.JFrame {

    /*Variables del tablero*/
    private JLabel[][] casillas = new JLabel[8][8];;
    private final byte TAMANIO = 8;
    public Icon ImageIcon;
    private boolean isSelected = false;
    private boolean isActive = true;
    //private Pieza piezaActiva;
    private String nombrePieza="NoPieza";
    private char equipo; //Tipo de pieza
    public Tablero tablero;
    public Tablero copiaTablero;
    public Arbol arbol;
    //public Nodo nodoRaiz;
    /*variables del Jugador*/
    private String Jugador;
    private char colorJugador;
    private boolean turnoUsuario;
    
    /*Variables de Movimientos*/
    private ArrayList<Posicion> movimientosPosibles;
    
    /*Variables de Bitacora de Juego*/
    ModeloRegistrarActividad modeloActividad = new ModeloRegistrarActividad();
    
    /*Variables de controladores*/
    ControladorTablero ctrTablero = new ControladorTablero();
    ControladorArbol ctrArbol = new ControladorArbol();

    

    
    
    
    

    /**
     * Creates new form Tablero
     */
    public TableroGUI() {  
        this.Jugador = "";
        initComponents();
        LogJuego.setModel(modeloActividad);
    }
    
    public void agregarComponentes(){
        tablero = new Tablero();
        generarTablero();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TableroJuego = new javax.swing.JPanel();
        panelFichas = new javax.swing.JPanel();
        alfilBlanco = new javax.swing.JLabel();
        caballoBlanco = new javax.swing.JLabel();
        peonBlanco = new javax.swing.JLabel();
        reinaBlanco = new javax.swing.JLabel();
        reyBlanco = new javax.swing.JLabel();
        torreBlanco = new javax.swing.JLabel();
        alfilOscuro = new javax.swing.JLabel();
        caballoOscuro = new javax.swing.JLabel();
        peonOscuro = new javax.swing.JLabel();
        reinaOscuro = new javax.swing.JLabel();
        reyOscuro = new javax.swing.JLabel();
        torreOscuro = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnJugar = new javax.swing.JButton();
        btnJuegoNuevo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LogJuego = new javax.swing.JList<>();
        etJugador = new javax.swing.JLabel();
        labelJugador = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TableroJuego.setBackground(new java.awt.Color(0, 153, 153));
        TableroJuego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        TableroJuego.setAlignmentX(0.0F);
        TableroJuego.setAlignmentY(0.0F);
        TableroJuego.setAutoscrolls(true);
        TableroJuego.setPreferredSize(new java.awt.Dimension(800, 800));

        javax.swing.GroupLayout TableroJuegoLayout = new javax.swing.GroupLayout(TableroJuego);
        TableroJuego.setLayout(TableroJuegoLayout);
        TableroJuegoLayout.setHorizontalGroup(
            TableroJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        TableroJuegoLayout.setVerticalGroup(
            TableroJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        panelFichas.setBackground(new java.awt.Color(153, 153, 153));
        panelFichas.setPreferredSize(new java.awt.Dimension(345, 150));

        alfilBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfil.png"))); // NOI18N
        alfilBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        alfilBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        alfilBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alfilBlancoMouseClicked(evt);
            }
        });

        caballoBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caballo.png"))); // NOI18N
        caballoBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        caballoBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        caballoBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caballoBlancoMouseClicked(evt);
            }
        });

        peonBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/peon.png"))); // NOI18N
        peonBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        peonBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        peonBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peonBlancoMouseClicked(evt);
            }
        });

        reinaBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reina.png"))); // NOI18N
        reinaBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reinaBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        reinaBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reinaBlancoMouseClicked(evt);
            }
        });

        reyBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rey.png"))); // NOI18N
        reyBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reyBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reyBlancoMouseClicked(evt);
            }
        });

        torreBlanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/torre.png"))); // NOI18N
        torreBlanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        torreBlanco.setPreferredSize(new java.awt.Dimension(68, 68));
        torreBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                torreBlancoMouseClicked(evt);
            }
        });

        alfilOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfilotro.png"))); // NOI18N
        alfilOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        alfilOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        alfilOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alfilOscuroMouseClicked(evt);
            }
        });

        caballoOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caballootro.png"))); // NOI18N
        caballoOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        caballoOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        caballoOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caballoOscuroMouseClicked(evt);
            }
        });

        peonOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/peonotro.png"))); // NOI18N
        peonOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        peonOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        peonOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                peonOscuroMouseClicked(evt);
            }
        });

        reinaOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reinaotra.png"))); // NOI18N
        reinaOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reinaOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        reinaOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reinaOscuroMouseClicked(evt);
            }
        });

        reyOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reyotro.png"))); // NOI18N
        reyOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reyOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        reyOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reyOscuroMouseClicked(evt);
            }
        });

        torreOscuro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/torreotra.png"))); // NOI18N
        torreOscuro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        torreOscuro.setPreferredSize(new java.awt.Dimension(68, 68));
        torreOscuro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                torreOscuroMouseClicked(evt);
            }
        });

        jLabel3.setText("AGERGAR PIEZAS");

        javax.swing.GroupLayout panelFichasLayout = new javax.swing.GroupLayout(panelFichas);
        panelFichas.setLayout(panelFichasLayout);
        panelFichasLayout.setHorizontalGroup(
            panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFichasLayout.createSequentialGroup()
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFichasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(alfilBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alfilOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(caballoBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(caballoOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(peonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(peonOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(reinaBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reinaOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(reyBlanco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reyOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFichasLayout.createSequentialGroup()
                                .addComponent(torreBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(torreOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelFichasLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel3)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelFichasLayout.setVerticalGroup(
            panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFichasLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alfilBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alfilOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(caballoBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caballoOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(peonBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peonOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reinaBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reinaOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reyOscuro, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(reyBlanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFichasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(torreBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(torreOscuro, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnJugar.setText("JUGAR");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJugarActionPerformed(evt);
            }
        });

        btnJuegoNuevo.setText("NUEVO JUEGO");
        btnJuegoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJuegoNuevoActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        LogJuego.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(LogJuego);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        etJugador.setText("JUGADOR:");

        labelJugador.setText("nombre_jugador");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("HISTORIAL DE JUEGO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(TableroJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnJugar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnJuegoNuevo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etJugador)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(labelJugador))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(panelFichas, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnJugar)
                            .addComponent(btnJuegoNuevo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etJugador)
                            .addComponent(labelJugador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TableroJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(panelFichas, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void alfilBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alfilBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(alfilBlanco); 
        nombrePieza = "Alfil";
        equipo='B';
    }//GEN-LAST:event_alfilBlancoMouseClicked

    private void caballoBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caballoBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(caballoBlanco); 
        nombrePieza = "Caballo";
        equipo='B';
    }//GEN-LAST:event_caballoBlancoMouseClicked

    private void peonBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peonBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(peonBlanco); 
        nombrePieza = "Peon";
        equipo='B';
    }//GEN-LAST:event_peonBlancoMouseClicked

    private void reinaBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reinaBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reinaBlanco);
        nombrePieza = "Reina";
        equipo='B';
    }//GEN-LAST:event_reinaBlancoMouseClicked

    private void reyBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reyBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reyBlanco); 
        nombrePieza = "Rey";
        equipo='B';
    }//GEN-LAST:event_reyBlancoMouseClicked

    private void torreBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_torreBlancoMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(torreBlanco); 
        nombrePieza = "Torre";
        equipo='B';
    }//GEN-LAST:event_torreBlancoMouseClicked

    private void alfilOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alfilOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(alfilOscuro); 
        nombrePieza = "Alfil";
        equipo='N';
    }//GEN-LAST:event_alfilOscuroMouseClicked

    private void caballoOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caballoOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(caballoOscuro); 
        nombrePieza = "Caballo";
        equipo='N';
    }//GEN-LAST:event_caballoOscuroMouseClicked

    private void peonOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_peonOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(peonOscuro); 
        nombrePieza = "Peon";
        equipo='N';
    }//GEN-LAST:event_peonOscuroMouseClicked

    private void reinaOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reinaOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reinaOscuro); 
        nombrePieza = "Reina";
        equipo='N';
    }//GEN-LAST:event_reinaOscuroMouseClicked

    private void reyOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reyOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(reyOscuro); 
        nombrePieza = "Rey";
        equipo='N';
    }//GEN-LAST:event_reyOscuroMouseClicked

    private void torreOscuroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_torreOscuroMouseClicked
        // TODO add your handling code here:
        activarDesactivarPiezas(torreOscuro); 
        nombrePieza = "Torre";
        equipo='N';
    }//GEN-LAST:event_torreOscuroMouseClicked

    private void btnJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJugarActionPerformed
        // TODO add your handling code here:
        activarDesactivarPanelFichas(false);
        isActive=false;
        Tablero copiaTablero = ctrTablero.copiarTablero(tablero);
//        ControladorArbol ctrArbol = null;
//        Nodo nodoRaiz;
        ctrArbol.crearArbol(copiaTablero);
        Nodo nodoRaiz;
        nodoRaiz = ctrArbol.getNodoRaiz();
        nodoRaiz.setNivel(0);
        nodoRaiz.setIsMax(true);
        
        if(!turnoUsuario){
            if(colorJugador == 'B'){
                ctrArbol.calcularMovimientos(copiaTablero, 'N',nodoRaiz);
            }
            else{
                ctrArbol.calcularMovimientos(copiaTablero, 'B',nodoRaiz);
            }
            //simularMovimientoComputador();
        }
    }//GEN-LAST:event_btnJugarActionPerformed

    private void btnJuegoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJuegoNuevoActionPerformed
        // TODO add your handling code here:
        activarDesactivarPanelFichas(true);
    }//GEN-LAST:event_btnJuegoNuevoActionPerformed

   
    public void activarDesactivarPiezas(JLabel pieza){
        if(isActive){
            Border borderDesactivo = BorderFactory.createLineBorder(Color.BLACK, 1);
            alfilBlanco.setBorder(borderDesactivo);
            caballoBlanco.setBorder(borderDesactivo);
            peonBlanco.setBorder(borderDesactivo);
            reinaBlanco.setBorder(borderDesactivo);
            reyBlanco.setBorder(borderDesactivo);
            torreBlanco.setBorder(borderDesactivo);
            //
            alfilOscuro.setBorder(borderDesactivo);
            caballoOscuro.setBorder(borderDesactivo);
            peonOscuro.setBorder(borderDesactivo);
            reinaOscuro.setBorder(borderDesactivo);
            reyOscuro.setBorder(borderDesactivo);
            torreOscuro.setBorder(borderDesactivo);
            //
            Border borderActivo = BorderFactory.createLineBorder(Color.YELLOW, 3);
            pieza.setBorder(borderActivo);
            ImageIcon = pieza.getIcon();
            isSelected = true;       
        }
    }
    
    public void activarDesactivarCasillas(JLabel escaque){
        Border borderDesactivo = BorderFactory.createLineBorder(Color.BLACK, 1);
        for (JLabel[] casilla : casillas) {
            for (int j = 0; j < casillas.length; j++) {
                casilla[j].setBorder(borderDesactivo);
            }
        }
        Border borderActivo = BorderFactory.createLineBorder(Color.YELLOW, 3);
        escaque.setBorder(borderActivo);  
    }
    
    public void activarPosiblesJugadas(){
        Border borderActivo = BorderFactory.createLineBorder(Color.BLUE, 3);
        Posicion mover;
        int movX;
        int movY;
        for(int i=0;i < movimientosPosibles.size();i++){
            mover = movimientosPosibles.get(i);
            movX = mover.getX();
            movY = mover.getY();
            casillas[movX][movY].setBorder(borderActivo);
        }
    }
    
    public void desactivarPosiblesJugadas(){
        Border borderDesactivo = BorderFactory.createLineBorder(Color.BLACK, 1);
        Posicion mover;
        int movX;
        int movY;
        for(int i=0;i < movimientosPosibles.size();i++){
            mover = movimientosPosibles.get(i);
            movX = mover.getX();
            movY = mover.getY();
            casillas[movX][movY].setBorder(borderDesactivo);
        }
    }
   
    /*
    *Panel de fichas: Agregar fichas manualmente
    */
    public void activarDesactivarPanelFichas(boolean opt){
        panelFichas.setVisible(opt); 
    }
    
    public void agregarJugador(String jugador,char colorJugador,boolean iniciarUsuario){
        this.Jugador = jugador;
        this.colorJugador=colorJugador;
        this.turnoUsuario = iniciarUsuario;
        labelJugador.setText(jugador);
    }
    
    public void generarTablero(){
        GridLayout tb = new GridLayout(TAMANIO,TAMANIO);
        boolean colorNegro = false;
        //nombrePieza= "NoPieza";
        for (int i = 0; i < casillas.length; i++) {
            for (int j = 0; j < casillas.length; j++) {
                casillas[i][j] = new JLabel();
                casillas[i][j].setOpaque(true);
                if(colorNegro){
                    casillas[i][j].setBackground(Color.black);
                }
                else{
                    casillas[i][j].setBackground(Color.white);
                } 
                colorNegro = !colorNegro;
                String X = Integer.toString(i);
                String Y = Integer.toString(j); 
                TableroJuego.add(casillas[i][j]);
                tablero.getCasillas()[i][j].setPieza(ctrTablero.crearPieza(i,j,"NoPieza",'X'));
                casillas[i][j].addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        try {
                            agregarPieza(X,Y);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TableroGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    
                });
            }
            colorNegro = !colorNegro;
            TableroJuego.setLayout(tb);
            super.revalidate();
            super.repaint();
            
        }
        
    }
    
    public final void agregarPieza(String x,String y) throws InterruptedException{
        int i = Integer.parseInt(x);
        int j= Integer.parseInt(y);
        
        if(isSelected && isActive){
            casillas[i][j].setIcon(ImageIcon);
            tablero.getCasillas()[i][j].setPieza(ctrTablero.crearPieza(i,j,nombrePieza,equipo));
            String descripcion = "Se agrego "+nombrePieza;
            agregarActividad(Jugador,descripcion);   
        }
        else{
            activarDesactivarCasillas(casillas[i][j]);
            ctrTablero.moverPieza(tablero.getCasillas()[i][j].getPieza(),tablero);
            if(ctrTablero.getEstadoFinal()){
                if(ctrTablero.esMisma()){
                    desactivarPosiblesJugadas();
                }
                else{
                    Pieza piezaActiva = ctrTablero.getPiezaContenida();
                    simularMovimiento(piezaActiva);
                }
                //ctrTablero.restablecerEstadoInicio();
            }        
            else{
                movimientosPosibles = ctrTablero.movimientosPosibles(tablero.getCasillas()[i][j].getPieza(), tablero); 
                if(movimientosPosibles != null){
                    activarPosiblesJugadas();
                } 
            }
        }
    }
    
    
    public void simularMovimiento(Pieza pieza) throws InterruptedException{
        ArrayList<Posicion> movimientos;
        movimientos = ctrTablero.getMovimientos();
        int posInicialx = pieza.getPosicion().getX();
        int posInicialy = pieza.getPosicion().getY();
        if(movimientos.size()>0){
            char tipopieza = pieza.getCaracterPieza();
            char equipo = pieza.getEquipo();
            PintarPieza('B','N',posInicialx,posInicialy);
            tablero.getCasillas()[posInicialx][posInicialy]
                    .setPieza(ctrTablero.crearPieza(posInicialx,posInicialy,"NoPieza",'X'));
            Posicion posTemporal;
            int posFinalx=0;
            int posFinaly=0;
            for(int h=0;h<movimientos.size();h++){
                posTemporal = movimientos.get(h);
                posFinalx = posTemporal.getX();
                posFinaly = posTemporal.getY();
                //PintarPieza(equipo,tipopieza,posFinalx,posFinaly); 
                //timer();
                //PintarPieza('B','N',posFinalx,posFinaly);
            }
            PintarPieza(equipo,tipopieza,posFinalx,posFinaly);
            tablero.getCasillas()[posFinalx][posFinaly]
                    .setPieza(ctrTablero.crearPieza(posFinalx,posFinaly,pieza.getNombrePieza(),pieza.getEquipo()));
            ctrTablero.restablecerEstadoInicio();
            intercambiarTurnoUsuario();
        }
    }
    
    
    public void simularMovimientoComputador(){
        System.out.println("Tablero que llega al simulador");
        ctrTablero.imprimirTablero(copiaTablero);
        Nodo jugadaGenerada;
        Pieza pieza;
        Posicion posInicial;
        Posicion movimiento;
        //ControladorArbol ctrArbol=null;
        jugadaGenerada = ctrArbol.ejecutarMovimiento();
        pieza = jugadaGenerada.getPieza();
        char tipopieza = pieza.getCaracterPieza();
        char equipoJuego = pieza.getEquipo();
        posInicial = jugadaGenerada.getPosInicial();
        int i = posInicial.getX() ;
        int j = posInicial.getY();
        PintarPieza('B','N',i,j);
        tablero.getCasillas()[i][j].setPieza(ctrTablero.crearPieza(i,j,"NoPieza",'X'));
        movimiento = jugadaGenerada.getPosFinal();
        int posFinalx;
        int posFinaly;
        posFinalx = movimiento.getX();
        posFinaly = movimiento.getY();
        PintarPieza(equipoJuego,tipopieza,posFinalx,posFinaly);
        tablero.getCasillas()[posFinalx][posFinaly]
                    .setPieza(ctrTablero.crearPieza(posFinalx,posFinaly,pieza.getNombrePieza(),pieza.getEquipo()));
        ctrTablero.restablecerEstadoInicio();
//        System.out.println("Tablero en el PC despues de movimiento");
//        ctrTablero.imprimirTablero(tablero);
        intercambiarTurnoUsuario();
    }
         
    public void intercambiarTurnoUsuario(){
        //System.out.println("Tablero en el Intercambio despues de movimiento");
        //ctrTablero.imprimirTablero(tablero);
        turnoUsuario = !turnoUsuario; 
        if(!turnoUsuario){
            //System.out.println("Tablero en el PC antes de movimiento");
            //ctrTablero.imprimirTablero(tablero);
            copiaTablero = ctrTablero.copiarTablero(tablero);
            //ControladorArbol ctrArbol;
            Nodo nodoRaiz;
            ctrArbol.crearArbol(tablero);
            nodoRaiz = ctrArbol.getNodoRaiz();
            nodoRaiz.setNivel(0);
            nodoRaiz.setIsMax(true);
            if(colorJugador == 'B'){
                ctrArbol.calcularMovimientos(tablero, 'N',nodoRaiz);
            }
            else{
                ctrArbol.calcularMovimientos(tablero, 'B',nodoRaiz);
            }
            simularMovimientoComputador();
        }
    }
    
    public final void PintarPieza(char color, char piece, int x, int y){ 
        switch(piece)
        {
           case 'R' :
              nombrePieza = "Rey";
              if(color == 'B'){
                  ImageIcon = reyBlanco.getIcon(); 
              } else{
                  ImageIcon = reyOscuro.getIcon(); 
              }
              break;
           case 'D' :
              nombrePieza = "Reina";
              if(color == 'B'){
                  ImageIcon = reinaBlanco.getIcon(); 
              } else{
                  ImageIcon = reinaOscuro.getIcon(); 
              }
              break;
           case 'T' :
              nombrePieza = "Torre";
              if(color == 'B'){
                  ImageIcon = torreBlanco.getIcon(); 
              } else{
                  ImageIcon = torreOscuro.getIcon(); 
              }
              break;
           case 'A' :
              nombrePieza = "Alfil";
              if(color == 'B'){
                  ImageIcon = alfilBlanco.getIcon(); 
              } else{
                  ImageIcon = alfilOscuro.getIcon(); 
              }
              break;
           case 'C' :
              nombrePieza = "Caballo";
              if(color == 'B'){
                  ImageIcon = caballoBlanco.getIcon(); 
              } else{
                  ImageIcon = caballoOscuro.getIcon(); 
              }
              break;
           case 'P' :
              nombrePieza = "Peon";
              if(color == 'B'){
                  ImageIcon = peonBlanco.getIcon(); 
              } else{
                  ImageIcon = peonOscuro.getIcon(); 
              }
              break;
           case 'N' :
               nombrePieza = "NoPieza";
               ImageIcon = null;
               break;
           default : 
              // Declaraciones
        }
        //falta decir de que equipo es (lo del color)
        casillas[x][y].setIcon(ImageIcon);
        tablero.getCasillas()[x][y].setPieza(ctrTablero.crearPieza(x,y,nombrePieza,color));
        String descripcion = "Se agrego "+nombrePieza;
        agregarActividad("Sistema",descripcion);
        super.revalidate();
        super.repaint();
    }
       
    public void agregarActividad(String usuario, String descripcion){
        Actividad actividad = new Actividad(usuario,descripcion);
        modeloActividad.agregarActividad(actividad);
    }
    
    public void eliminarActividad(int index){
        modeloActividad.eliminarActividad(index);
    }
    
    public void limpiarActividades(){
        modeloActividad.eliminarTodasActividades();
    }
    
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableroGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> LogJuego;
    private javax.swing.JPanel TableroJuego;
    private javax.swing.JLabel alfilBlanco;
    private javax.swing.JLabel alfilOscuro;
    private javax.swing.JButton btnJuegoNuevo;
    private javax.swing.JButton btnJugar;
    private javax.swing.JLabel caballoBlanco;
    private javax.swing.JLabel caballoOscuro;
    private javax.swing.JLabel etJugador;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelJugador;
    private javax.swing.JPanel panelFichas;
    private javax.swing.JLabel peonBlanco;
    private javax.swing.JLabel peonOscuro;
    private javax.swing.JLabel reinaBlanco;
    private javax.swing.JLabel reinaOscuro;
    private javax.swing.JLabel reyBlanco;
    private javax.swing.JLabel reyOscuro;
    private javax.swing.JLabel torreBlanco;
    private javax.swing.JLabel torreOscuro;
    // End of variables declaration//GEN-END:variables
}
